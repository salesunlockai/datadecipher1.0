@model DataDecipher.WebApp.Models.ParsedData
@using System.Data;

<div style="overflow: auto; width:1200px; height:600px" >
    <table id="ParsedDataTable" border="1" cellpadding="5" class="border border-black rounded">
        <thead>
            <tr>
                @foreach (DataColumn col in Model.parsedDataTable.Columns)
                {
                    <th>@col.ColumnName</th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (DataRow row in Model.parsedDataTable.Rows)
            {
                <tr>
                    @foreach (DataColumn col in Model.parsedDataTable.Columns)
                    {
                        <td>@row[col.ColumnName]</td>
                    }
                </tr>
            }
        </tbody>
    </table>
</div>
<br />
<input type="hidden" id="ParsedDataInJsonFormat" value="@Model.parsedDataAsJson" />

<label for="outputCsvFileName" class="badge badge-default-noborder">
    Output CSV Filename (Save as):
    <input type="text" id="outputCsvFileNameToSaveAs" name="outputCsvFileName" placeholder="File Name" class="form-control" value="ParsedData.csv" />
    <input type="button" id="btnSaveAsCsvFile" onclick="saveTextAsCsvFile();" value="Download parsed data as CSV" class="btn btn-primary btn-round" />
</label>

<label for="outputJsonFileName" class="badge badge-default-noborder">
    Output JSON Filename (Save as):
    <input type="text" id="outputJsonFileNameToSaveAs" name="outputJsonFileName" placeholder="File Name" class="form-control" value="ParsedData.json" />
    <input type="button" id="btnSaveAsJsonFile" onclick="saveTextAsJsonFile();" value="Download parsed data as JSON" class="btn btn-primary btn-round" />
</label>

<input type="button"
       id="showVisualization" onclick="CreateVisualizations()" value="Visualize Parsed Data" class="btn btn-primary" />
<div id="CreateParsedDataViewFooter">
</div>

<script type="text/javascript">

    function CreateVisualizations(){
        parsedDataInJsonFormat= document.getElementById("ParsedDataInJsonFormat").value;
        $.ajax({
            url: '/Main/LoadVisualizationPanel',
            type: 'POST',
            datatype: 'text',
            contentType: 'application/x-www-form-urlencoded',
            data: { ParsedDataInJsonFormat: parsedDataInJsonFormat},
            success: function(content) {
                $('#CreateVisualization').html(content);
            },
            error: function(e) { }
        });
    }

    var createparserfooter = $("#CreateParsedDataViewFooter");

    var onBegin = function() {
                createparserfooter.html("<span class=\"text-primary\">Creating parser please wait...</span>");};

    var onComplete = function(data,status) {
                createparserfooter.html("<div class=\"alert alert-success\" role=\"alert\"><div class=\"container-fluid\"><div class=\"alert-icon\"><i class=\"now-ui-icons ui-2_like\"></i></div>A new parsing job started.<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"><span aria-hidden=\"true\"><i class=\"now-ui-icons ui-1_simple-remove\"></i></span></button></div></div>");
                $('#PublishOutput').html(data.responseText);};

    var onSuccess = function(context) {};

    var onFailed = function(context) {};

    function saveTextAsCsvFile() {
        var fileNameToSaveAsCsv = document.getElementById("outputCsvFileNameToSaveAs").value;
        var html = document.getElementById("ParsedDataTable").outerHTML;
        export_table_to_csv(html, fileNameToSaveAsCsv);
    }

    function saveTextAsJsonFile() {
        var fileNameToSaveAsJson = document.getElementById("outputJsonFileNameToSaveAs").value;
        var html = document.getElementById("ParsedDataInJsonFormat").value;
        export_table_to_csv(html, fileNameToSaveAsJson);
    }

    function download_csv(csv, filename) {
        var csvFile;
        var downloadLink;

        // CSV FILE
        csvFile = new Blob([csv], {type: "text/csv"});

        // Download link
        downloadLink = document.createElement("a");

        // File name
        downloadLink.download = filename;

        // We have to create a link to the file
        downloadLink.href = window.URL.createObjectURL(csvFile);

        // Make sure that the link is not displayed
        downloadLink.style.display = "none";

        // Add the link to your DOM
        document.body.appendChild(downloadLink);

        // Lanzamos
        downloadLink.click();
    }

    function export_table_to_csv(html, filename) {
        var csv = [];
        var rows = document.querySelectorAll("table tr");

        for (var i = 0; i < rows.length; i++) {
            var row = [], cols = rows[i].querySelectorAll("td, th");

            for (var j = 0; j < cols.length; j++)
                row.push(cols[j].innerText);

            csv.push(row.join(","));
        }

        // Download CSV
        download_csv(csv.join("\n"), filename);
    }

    function destroyClickedElement(event)
    {
        document.body.removeChild(event.target);
    }

    function loadFileAsText()
    {
        var fileToLoad = document.getElementById("fileToLoad").files[0];

        var fileReader = new FileReader();
        fileReader.onload = function(fileLoadedEvent)
        {
            var textFromFileLoaded = fileLoadedEvent.target.result;
            document.getElementById("inputTextToSave").value = textFromFileLoaded;
        };
        fileReader.readAsText(fileToLoad, "UTF-8");
    }

</script>